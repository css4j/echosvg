<?xml version="1.0" standalone="no"?>

<!--

   See the NOTICE file distributed with this work for additional
   information regarding copyright ownership.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

-->
<!-- ====================================================================== -->
<!-- Script the normalizedPathSegList attribute.                            -->
<!--                                                                        -->
<!-- @version $Id$    -->
<!-- ====================================================================== -->

<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:test="https://css4j.github.io/echosvg/test"
     width="210mm" height="297mm" viewBox="0 0 210 297"
     onload="normalizedPathTest();">
  <script type="text/javascript">
    //<![CDATA[
    function serializePathSeg(psi) {
        var buf = psi.pathSegTypeAsLetter;
        switch (psi.pathSegType) {
        case 2: // SVGPathSeg.PATHSEG_MOVETO_ABS
        case 4: // SVGPathSeg.PATHSEG_LINETO_ABS
            buf += ' ';
            buf += psi.x.toFixed(1);
            buf += ' ';
            buf += psi.y.toFixed(1);
            break;
        case 6: // SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS
            buf += ' ';
            buf += psi.x1.toFixed(1);
            buf += ' ';
            buf += psi.y1.toFixed(1);
            buf += ' ';
            buf += psi.x2.toFixed(1);
            buf += ' ';
            buf += psi.y2.toFixed(1);
            buf += ' ';
            buf += psi.x.toFixed(1);
            buf += ' ';
            buf += psi.y.toFixed(1);
            break;
        case 1: // SVGPathSeg.PATHSEG_CLOSEPATH
            break;
        }
        buf += ' ';
        return buf;
    }
    //
    function normalizedPathTest() {
    var expected = 'M 118.5 102.5 C 118.5 80.2 136.7 62.0 159.0 62.0 '
            + 'L 303.0 62.0 C 325.3 62.0 343.5 80.2 343.5 102.5 L 343.5 150.5 '
            + 'C 343.5 158.7 327.3 167.1 313.5 171.7 '
            + 'C 291.6 179.0 262.3 183.0 231.0 183.0 '
            + 'C 199.7 183.0 170.4 179.0 148.5 171.7 '
            + 'C 134.7 167.1 118.5 158.7 118.5 150.5 z '
            + 'M 118.5 182.5 L 118.5 174.0 '
            + 'C 124.5 178.1 132.6 182.2 143.8 185.9 '
            + 'C 167.2 193.7 198.2 198.0 231.0 198.0 '
            + 'C 263.8 198.0 294.8 193.7 318.2 185.9 '
            + 'C 329.4 182.2 337.5 178.1 343.5 174.0 L 343.5 182.5 '
            + 'C 343.5 204.8 325.3 223.0 303.0 223.0 L 159.0 223.0 '
            + 'C 136.7 223.0 118.5 204.8 118.5 182.5 z ';

        var path = document.getElementById("path1");
        var norm;
        if (path.normalizedPathSegList) {
            norm = path.normalizedPathSegList;
        } else {
            setTestResult('skipped');
            return;
        }

        var result = '';
        var n = norm.numberOfItems;
        for (var i = 0; i < n; i++) {
            var itemnps = serializePathSeg(norm.getItem(i));
            result += itemnps;
        }
        assertEquals(expected, result);
    }
    //
    function assertEquals(expected, actual) {
        if (expected == actual) {
            setTestResult('passed');
        } else {
            //console.log('Actual: ' + actual);
            System.err.println('Actual: ' + actual);
        }
    }
    //
    function setTestResult(result) {
       var resultElm = document.getElementById("testResult");
       resultElm.setAttributeNS(null, "result", result);
    }
    //]]>
  </script>

      <test:testResult id="testResult"/>

      <path id="path1" d="
M 118.5,102.5
C 118.5,80.168 136.668,62 159,62
h 144
c 22.332,0 40.5,18.168 40.5,40.5
v 48
c 0,8.239 -16.171,16.553 -30.019,21.169
C 291.56,178.976 262.268,183 231,183 199.732,183 170.439,178.976 148.519,171.669 134.671,167.053 118.5,158.739 118.5,150.5
Z
m 0,80
v -8.518
c 5.971,4.143 14.148,8.208 25.275,11.918 23.41,7.803 54.387,12.1 87.225,12.1 32.838,0 63.815,-4.297 87.225,-12.101 11.128,-3.709 19.304,-7.775 25.275,-11.918
v 8.518
c 0,22.332 -18.168,40.5 -40.5,40.5
H 159
C 136.668,223 118.5,204.832 118.5,182.5
Z
"/>
</svg>
