<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN"
"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<!--

   See the NOTICE file distributed with this work for additional
   information regarding copyright ownership.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

-->
<!-- ========================================================================= -->
<!-- This test checks that the various RGB values read from the SVGColor       -->
<!-- interface return accurate values.                                         -->
<!--                                                                           -->
<!-- @author vincent.hardy@sun.com                                             -->
<!-- @author shillion@ilog.fr                                                  -->
<!-- @author for later modifications, see Git history                          -->
<!-- @version $Id$            -->
<!-- ========================================================================= -->

<svg xmlns="http://www.w3.org/2000/svg" 
     xmlns:xlink="http://www.w3.org/1999/xlink" 
     xmlns:test="https://css4j.github.io/echosvg/test"
     width="450" height="500" viewBox="0 0 450 500"
     onload="runTest(evt)">

  <test:testResult id="testResult" />

  <script type="text/ecmascript"><![CDATA[

   var testNS = "https://css4j.github.io/echosvg/test"

   function runTest() {
     var result = document.getElementById("testResult")

     var elt = document.getElementById("targetElement")
     result.setAttributeNS(null, "result", "failed")

     if (elt == null){
        result.setAttributeNS(null, "errorCode", "cannot.find.test.element")
        var entry = document.createElementNS(testNS, "errorDescriptionEntry")
        entry.setAttributeNS(null, "id", "missing.element.id")
        entry.setAttributeNS(null, "value", "targetElement")
        result.appendChild(entry)
        return
     }

     var rgb = elt.getPresentationAttributeValue("fill")

     if (rgb == null) {
        result.setAttributeNS(null, "errorCode",
          "SVGStylable.getPresentationAttributeValue returned null")
        return
     }

     if (Math.abs(1/255 - rgb.r.floatValue) > 1e-7) { // 1 hex
        result.setAttributeNS(null, "errorCode",
          "invalid red component. Expected 1/255, found: " + rgb.r.cssText);
        var entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "expected.red");
        entry.setAttributeNS(null, "value", "1");
        result.appendChild(entry);
        entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "found.red");
        entry.setAttributeNS(null, "value", "" + rgb.r);
        result.appendChild(entry);
        return;
     }

     if (Math.abs(2/255 - rgb.g.floatValue) > 1e-7) { // 2 hex
        result.setAttributeNS(null, "errorCode",
          "invalid green component. Expected 2/255, found: " + rgb.g.cssText);
        var entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "expected.green");
        entry.setAttributeNS(null, "value", "2");
        result.appendChild(entry);
        entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "found.green");
        entry.setAttributeNS(null, "value", "" + rgb.g);
        result.appendChild(entry);
        return;
     }

     if (Math.abs(3/255 - rgb.b.floatValue) > 1e-7) { // 3 hex
        result.setAttributeNS(null, "errorCode",
          "invalid blue component. Expected 3/255, found: " + rgb.b.cssText);
        var entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "expected.blue");
        entry.setAttributeNS(null, "value", "3");
        result.appendChild(entry);
        entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "found.blue");
        entry.setAttributeNS(null, "value", "" + rgb.b);
        result.appendChild(entry);
        return;
     }

     elt.setAttributeNS(null, "fill", "#030201")

     if (Math.abs(3/255 - rgb.r.floatValue) > 1e-7) { // 3 hex
        result.setAttributeNS(null, "errorCode",
          "invalid red component. Expected 3/255, found: " + rgb.r.cssText);
        var entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "expected.red");
        entry.setAttributeNS(null, "value", "1");
        result.appendChild(entry);
        entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "found.red");
        entry.setAttributeNS(null, "value", "" + rgb.r);
        result.appendChild(entry);
        return;
     }

     if (Math.abs(2/255 - rgb.g.floatValue) > 1e-7) { // 2 hex
        result.setAttributeNS(null, "errorCode",
          "invalid green component. Expected 2/255, found: " + rgb.g.cssText);
        var entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "expected.green");
        entry.setAttributeNS(null, "value", "2");
        result.appendChild(entry);
        entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "found.green");
        entry.setAttributeNS(null, "value", "" + rgb.g);
        result.appendChild(entry);
        return;
     }

     if (Math.abs(1/255 - rgb.b.floatValue) > 1e-7) { // 1 hex
        result.setAttributeNS(null, "errorCode",
          "invalid blue component. Expected 1/255, found: " + rgb.b.cssText);
        var entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "expected.blue");
        entry.setAttributeNS(null, "value", "3");
        result.appendChild(entry);
        entry = document.createElementNS(testNS, "errorDescriptionEntry");
        entry.setAttributeNS(null, "id", "found.blue");
        entry.setAttributeNS(null, "value", "" + rgb.b);
        result.appendChild(entry);
        return;
     }

     result.setAttributeNS(null, "result", "passed");
   }

  ]]></script>

  <g fill="blue">
    <rect x="10%" y="10%" width="80%" height="80%"
          fill="rgb(1,2,3)" id="targetElement"/>
  </g>


</svg>
