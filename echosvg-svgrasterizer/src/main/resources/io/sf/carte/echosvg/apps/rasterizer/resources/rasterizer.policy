// -----------------------------------------------------------------------------
//
//   See the NOTICE file distributed with this work for additional
//   information regarding copyright ownership.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// $Id$
// -----------------------------------------------------------------------------

grant codeBase "file:${java.home}/-" {
  permission java.security.AllPermission;
};

// Give permissions to Gradle and libraries in the Gradle cache
grant codeBase "file:${user.home}/.gradle/-" {
  permission java.lang.RuntimePermission "*";
  permission java.io.FilePermission "${user.home}/.gradle/-", "read";
  permission java.io.FilePermission "${app.ide.classdir}/-", "read";
  permission java.io.FilePermission "${app.dev.base}/-", "read, write";
  permission java.net.SocketPermission "*", "listen, connect, resolve, accept";
  permission java.util.PropertyPermission "*", "read";
  permission java.util.PropertyPermission "java.security.policy", "write";
  permission java.security.SecurityPermission "getPolicy";
};

grant codeBase "file:${app.dev.base}/gradle/-" {
  permission java.security.AllPermission;
};

// Maven local repository
//grant codeBase "file:${user.home}/.m2/repository/-" {
//  permission java.security.AllPermission;
//};

// IDE class directory (optional)
grant codeBase "file:/${app.ide.classdir}/-" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-anim${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-awt-util${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-constants${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-css${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-dom${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-ext${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-extension${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-gui-util${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-gvt${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-i18n${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-parser${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-slideshow${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-svg-dom${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-svggen${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-svgpp${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-svgrasterizer${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-swing${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-test${app.dev.testdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-test-swing${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-transcoder${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-ttf2svg${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-util${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-xml${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/smil-api${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/svgom-api${app.dev.classdir}" {
  permission java.security.AllPermission;
};

grant codeBase "file:${app.dev.base}/echosvg-bridge${app.dev.classdir}" {
  permission java.security.SecurityPermission "getPolicy";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.net.SocketPermission "*", "listen, connect, resolve, accept";
  permission java.net.URLPermission "https:*", "GET,POST";
  permission java.net.URLPermission "http:*", "GET,POST";
  permission java.util.PropertyPermission "rhino.stack.style", "read";
  permission java.io.FilePermission "<<ALL FILES>>", "read";
};

grant codeBase "file:${app.dev.base}/echosvg-script${app.dev.classdir}" {
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.net.SocketPermission "*", "listen, connect, resolve, accept";
  permission java.net.URLPermission "https:*", "GET,POST";
  permission java.net.URLPermission "http:*", "GET,POST";
  permission java.util.PropertyPermission "org.mozilla.javascript.JavaAdapter", "read";
  permission java.util.PropertyPermission "org.mozilla.javascript.JavaAdapterClassName", "read";
  permission java.util.PropertyPermission "user.home", "read";
  permission java.util.PropertyPermission "io.sf.carte.echosvg.script.imports", "read";
  permission java.util.PropertyPermission "rhino.stack.style", "read";
  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.awt.AWTPermission "showWindowWithoutWarningBanner";
};

grant {
  permission java.io.FilePermission "${app.dev.base}/echosvg-dom${app.dev.classdir}io/sf/carte/echosvg/dom/util/-", "read";
  permission java.io.FilePermission "${java.home}/lib/-", "read";
};
